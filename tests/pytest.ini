[tool:pytest]
# pytest configuration for diabetes prediction pipeline tests

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 6.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --maxfail=5
    --durations=10
    --color=yes
    --html=test_reports/pytest_report.html
    --self-contained-html
    --cov=tests
    --cov-report=html:test_reports/coverage
    --cov-report=xml:test_reports/coverage.xml
    --cov-report=term-missing
    --cov-fail-under=80
    --junitxml=test_reports/junit.xml

# Markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    e2e: End-to-end tests for complete workflows
    slow: Tests that take longer to execute (>5 seconds)
    requires_services: Tests that require running Docker services
    data_quality: Tests related to data quality validation
    ml_model: Tests related to machine learning models
    security: Tests related to security and authentication
    performance: Tests related to performance and load testing
    smoke: Quick smoke tests for basic functionality

# Test timeout (in seconds)
timeout = 300

# Disable warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s (%(filename)s:%(lineno)d)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Console output
console_output_style = progress

# Test order
# Run faster tests first
